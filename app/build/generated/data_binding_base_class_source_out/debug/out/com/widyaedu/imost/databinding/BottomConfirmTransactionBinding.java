// Generated by view binder compiler. Do not edit!
package com.widyaedu.imost.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.widyaedu.imost.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomConfirmTransactionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnConfirmYes;

  @NonNull
  public final TextView productNameConfirm;

  @NonNull
  public final TextView tvConfirm;

  @NonNull
  public final TextView tvHargaconfirm;

  @NonNull
  public final TextView tvPriceconfirm;

  private BottomConfirmTransactionBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnConfirmYes, @NonNull TextView productNameConfirm,
      @NonNull TextView tvConfirm, @NonNull TextView tvHargaconfirm,
      @NonNull TextView tvPriceconfirm) {
    this.rootView = rootView;
    this.btnConfirmYes = btnConfirmYes;
    this.productNameConfirm = productNameConfirm;
    this.tvConfirm = tvConfirm;
    this.tvHargaconfirm = tvHargaconfirm;
    this.tvPriceconfirm = tvPriceconfirm;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomConfirmTransactionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomConfirmTransactionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_confirm_transaction, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomConfirmTransactionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnConfirmYes;
      Button btnConfirmYes = rootView.findViewById(id);
      if (btnConfirmYes == null) {
        break missingId;
      }

      id = R.id.productNameConfirm;
      TextView productNameConfirm = rootView.findViewById(id);
      if (productNameConfirm == null) {
        break missingId;
      }

      id = R.id.tvConfirm;
      TextView tvConfirm = rootView.findViewById(id);
      if (tvConfirm == null) {
        break missingId;
      }

      id = R.id.tvHargaconfirm;
      TextView tvHargaconfirm = rootView.findViewById(id);
      if (tvHargaconfirm == null) {
        break missingId;
      }

      id = R.id.tvPriceconfirm;
      TextView tvPriceconfirm = rootView.findViewById(id);
      if (tvPriceconfirm == null) {
        break missingId;
      }

      return new BottomConfirmTransactionBinding((ConstraintLayout) rootView, btnConfirmYes,
          productNameConfirm, tvConfirm, tvHargaconfirm, tvPriceconfirm);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
