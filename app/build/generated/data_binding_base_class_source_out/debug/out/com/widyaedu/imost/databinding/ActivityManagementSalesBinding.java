// Generated by view binder compiler. Do not edit!
package com.widyaedu.imost.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.toptoche.searchablespinnerlibrary.SearchableSpinner;
import com.widyaedu.imost.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityManagementSalesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final ImageView backSales;

  @NonNull
  public final FloatingActionButton btnAddSales;

  @NonNull
  public final FrameLayout frameLayout;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final RecyclerView rvMySales;

  @NonNull
  public final Toolbar salesBar;

  @NonNull
  public final SearchableSpinner spinnerManageSales;

  private ActivityManagementSalesBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull ImageView backSales,
      @NonNull FloatingActionButton btnAddSales, @NonNull FrameLayout frameLayout,
      @NonNull NestedScrollView nestedScrollView, @NonNull RecyclerView rvMySales,
      @NonNull Toolbar salesBar, @NonNull SearchableSpinner spinnerManageSales) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.backSales = backSales;
    this.btnAddSales = btnAddSales;
    this.frameLayout = frameLayout;
    this.nestedScrollView = nestedScrollView;
    this.rvMySales = rvMySales;
    this.salesBar = salesBar;
    this.spinnerManageSales = spinnerManageSales;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityManagementSalesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityManagementSalesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_management_sales, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityManagementSalesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = rootView.findViewById(id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.backSales;
      ImageView backSales = rootView.findViewById(id);
      if (backSales == null) {
        break missingId;
      }

      id = R.id.btnAddSales;
      FloatingActionButton btnAddSales = rootView.findViewById(id);
      if (btnAddSales == null) {
        break missingId;
      }

      id = R.id.frameLayout;
      FrameLayout frameLayout = rootView.findViewById(id);
      if (frameLayout == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      NestedScrollView nestedScrollView = rootView.findViewById(id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.rv_mySales;
      RecyclerView rvMySales = rootView.findViewById(id);
      if (rvMySales == null) {
        break missingId;
      }

      id = R.id.sales_bar;
      Toolbar salesBar = rootView.findViewById(id);
      if (salesBar == null) {
        break missingId;
      }

      id = R.id.spinnerManageSales;
      SearchableSpinner spinnerManageSales = rootView.findViewById(id);
      if (spinnerManageSales == null) {
        break missingId;
      }

      return new ActivityManagementSalesBinding((ConstraintLayout) rootView, appBarLayout,
          backSales, btnAddSales, frameLayout, nestedScrollView, rvMySales, salesBar,
          spinnerManageSales);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
