// Generated by view binder compiler. Do not edit!
package com.widyaedu.imost.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.widyaedu.imost.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout clHeader;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final RecyclerView rvList;

  @NonNull
  public final TextView tvNodata;

  @NonNull
  public final TextView tvTitle;

  private ActivityListBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout clHeader, @NonNull ImageView ivBack, @NonNull RecyclerView rvList,
      @NonNull TextView tvNodata, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.clHeader = clHeader;
    this.ivBack = ivBack;
    this.rvList = rvList;
    this.tvNodata = tvNodata;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.clHeader;
      ConstraintLayout clHeader = rootView.findViewById(id);
      if (clHeader == null) {
        break missingId;
      }

      id = R.id.ivBack;
      ImageView ivBack = rootView.findViewById(id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.rvList;
      RecyclerView rvList = rootView.findViewById(id);
      if (rvList == null) {
        break missingId;
      }

      id = R.id.tvNodata;
      TextView tvNodata = rootView.findViewById(id);
      if (tvNodata == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = rootView.findViewById(id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ActivityListBinding((ConstraintLayout) rootView, clHeader, ivBack, rvList,
          tvNodata, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
